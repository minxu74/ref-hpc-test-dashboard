name: Combine-Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'public/data/ref_prov_*/ref_prov.json'  # Trigger when any ref_prov.json changes

jobs:

  check-changes:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.filter.outputs.ref_prov_files == 'true' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for JSON changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            ref_prov_files:
              - 'public/data/ref_prov_*/ref_prov.json'
  combine-data:
    needs: check-changes
    if: needs.check-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for branch operations

      - name: Find all ref_prov directories
        id: find-dirs
        run: |
          # Find all matching directories and output as JSON array
          dirs=$(find . -type d -name 'ref_prov_[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]' | jq -R -s -c 'split("\n")[:-1]')
          echo "dirs='${dirs}'" >> $GITHUB_OUTPUT
          echo "Found directories: ${dirs}"

      - name: Combine JSON files
        id: combine-json
        run: |
          # Initialize combined object
          echo '{}' > ref_prov_all.json

          # Read directory list from previous step
          dirs=${{ steps.find-dirs.outputs.dirs }}
          
          # Process each directory
          for dir in $(echo "${dirs}" | jq -r '.[]'); do
            if [ -f "${dir}/ref_prov.json" ]; then
              jq -n '
                reduce inputs as $in ({};
                  reduce ($in | keys[]) as $key (.;
                    .[$key] = (.[$key] + $in[$key])
                  )
                )
              ' "${dir}/ref_prov.json" public/data/ref_prov_all.json > temp.json
              mv temp.json ref_prov_all.json
              echo "Merged ${dir}/ref_prov.json"
            fi
          done

          # Validate the final output
          if ! jq empty ref_prov_all.json; then
            echo "Error: Invalid combined JSON"
            exit 1
          fi

      - name: Deploy to branch
        run: |
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Create or switch to deployment branch
          git checkout -B deploy

          # Move combined file to root
          mv ref_prov_all.json public/data/ref_prov_all.json

          # Commit and force push
          git add public/data/ref_prov_all.json
          git commit -m "Auto-update combined json"
          git push origin deploy --force
